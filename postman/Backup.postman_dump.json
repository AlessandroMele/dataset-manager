{
	"version": 1,
	"collections": [
		{
			"id": "01c28231-9885-404b-a4a7-e321c011e6ad",
			"uid": "0-01c28231-9885-404b-a4a7-e321c011e6ad",
			"name": "3) Insert label",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"dd47a173-81f0-4e42-879d-48de81b3ea7e",
				"7bdf6740-8d05-421d-a4a1-7c17d07a41aa",
				"b3100094-e4ef-4d1d-b027-81966d7503bf",
				"3e6c8326-9757-4df8-8581-3b13136db789",
				"d9228466-c2f0-4b9f-ad18-5cee17415c92",
				"8ebadf8f-7b01-4a74-9f51-3067e98a6d6e",
				"93062e85-f6f6-48b3-89c5-e275d1fb8caa",
				"039a8e79-7b44-4eaa-9e80-2cde2b764586",
				"61229c1f-77a5-4ade-abef-f1be5d6be64d",
				"d3c19e21-efd9-4b92-8054-e4077f89693b",
				"80535ec0-99e4-434e-a5dc-a52c2fe7b22b",
				"d36396a3-4afe-46de-a875-fa93bb7af988"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:43.731Z",
			"folders": [],
			"requests": [
				{
					"id": "039a8e79-7b44-4eaa-9e80-2cde2b764586",
					"uid": "0-039a8e79-7b44-4eaa-9e80-2cde2b764586",
					"name": "No image found (label)",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No image found with this 'imagePath'\");",
									"});"
								],
								"type": "text/javascript",
								"id": "5c062c96-c895-424e-813a-8491c1d4e1e0"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No image found with this 'imagePath'\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"classe 1\",\r\n    \"imagePath\":\"immagine inesistente\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3e6c8326-9757-4df8-8581-3b13136db789",
					"uid": "0-3e6c8326-9757-4df8-8581-3b13136db789",
					"name": "No malformed BoundingBoxes",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");",
									"});"
								],
								"type": "text/javascript",
								"id": "575a144b-2dc8-4cf3-bc63-f97958607903"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 0.1,\r\n    \"imagePath\": \"ciaociao\"\r\n\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "61229c1f-77a5-4ade-abef-f1be5d6be64d",
					"uid": "0-61229c1f-77a5-4ade-abef-f1be5d6be64d",
					"name": "Label insert success",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).equals(\"Label created with success\");",
									"});"
								],
								"type": "text/javascript",
								"id": "29cd8410-8c5c-4f2c-9cf8-1bcb9b36a588"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).equals(\"Label created with success\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"classe 50\",\r\n    \"imagePath\":\"/datasets/1/user/img_1.png\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "7bdf6740-8d05-421d-a4a1-7c17d07a41aa",
					"uid": "0-7bdf6740-8d05-421d-a4a1-7c17d07a41aa",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ciaociao",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "eaa80050-1036-42d2-a9c2-71c74ae0621a"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ciaociao"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "80535ec0-99e4-434e-a5dc-a52c2fe7b22b",
					"uid": "0-80535ec0-99e4-434e-a5dc-a52c2fe7b22b",
					"name": "No image found (Bounding Boxes)",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No image found with this 'imagePath'\");",
									"});"
								],
								"type": "text/javascript",
								"id": "395db3c6-e62d-48ed-bfe7-6899c86fb7d6"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No image found with this 'imagePath'\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 0.1,\r\n    \"width\": 0.3,\r\n    \"imagePath\": \"immagine inesistente\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8ebadf8f-7b01-4a74-9f51-3067e98a6d6e",
					"uid": "0-8ebadf8f-7b01-4a74-9f51-3067e98a6d6e",
					"name": "No imagePath",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'imagePath'\");",
									"});"
								],
								"type": "text/javascript",
								"id": "70f1bad9-f824-4e17-8d4c-2911ad9125fb"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'imagePath'\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 0.1,\r\n    \"width\": 0.3\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "93062e85-f6f6-48b3-89c5-e275d1fb8caa",
					"uid": "0-93062e85-f6f6-48b3-89c5-e275d1fb8caa",
					"name": "Label insert from another account",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).equals(\"No image found with this 'imagePath'\");",
									"});"
								],
								"type": "text/javascript",
								"id": "7f685dc2-9173-4940-bed0-855c593852d8"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).equals(\"No image found with this 'imagePath'\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"classe 1\",\r\n    \"imagePath\":\"/datasets/1/user/img_1.png\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b3100094-e4ef-4d1d-b027-81966d7503bf",
					"uid": "0-b3100094-e4ef-4d1d-b027-81966d7503bf",
					"name": "No className",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'className' (max 30 char)\");",
									"});"
								],
								"type": "text/javascript",
								"id": "072921d4-3b79-4c3d-b7dc-729010f8cdd3"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'className' (max 30 char)\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"height\": 0.1,\r\n    \"center\": 0.1,\r\n    \"width\": 12,\r\n    \"imagePath\": \"ciaociao\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d36396a3-4afe-46de-a875-fa93bb7af988",
					"uid": "0-d36396a3-4afe-46de-a875-fa93bb7af988",
					"name": "Label Bounding Boxes insert success",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).equals(\"Label created with success\");",
									"});"
								],
								"type": "text/javascript",
								"id": "abf0dd6d-af16-45f1-8c86-bc78320de3a7"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).equals(\"Label created with success\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.3,\r\n    \"center\": 0.3,\r\n    \"width\": 0.444,\r\n    \"imagePath\":\"/datasets/1/user/img_1.png\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d3c19e21-efd9-4b92-8054-e4077f89693b",
					"uid": "0-d3c19e21-efd9-4b92-8054-e4077f89693b",
					"name": "Label insert from another account (Bounding Boxes)",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "838a2170-b4dc-4eaf-a85f-d8969b8f43e8",
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).equals(\"No image found with this 'imagePath'\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).equals(\"No image found with this 'imagePath'\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 0.1,\r\n    \"width\": 0.3,\r\n    \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d9228466-c2f0-4b9f-ad18-5cee17415c92",
					"uid": "0-d9228466-c2f0-4b9f-ad18-5cee17415c92",
					"name": "Not normalized BoundingBoxes",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");",
									"});"
								],
								"type": "text/javascript",
								"id": "63ee28e6-644d-4207-81a4-a485c19dcadd"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "{\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 0.1,\r\n    \"width\": 12,\r\n    \"imagePath\": \"ciaociao\"\r\n\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "dd47a173-81f0-4e42-879d-48de81b3ea7e",
					"uid": "0-dd47a173-81f0-4e42-879d-48de81b3ea7e",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/label",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ae90c5da-5f40-465f-8ad9-d3cd50a93b2d"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "01c28231-9885-404b-a4a7-e321c011e6ad",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "088ccd15-fe12-4788-9417-8a753408e69c",
			"uid": "0-088ccd15-fe12-4788-9417-8a753408e69c",
			"name": "2) Delete model",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"db0a3ea5-0012-41d9-afba-7111be39406c",
				"791fd87a-b617-4be9-8be1-1600346e469f",
				"f96a75ae-7774-4d50-8bc4-1f7118068b8e",
				"c50d82ab-d60e-48ba-92f9-2312c6af7381"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:40.564Z",
			"folders": [],
			"requests": [
				{
					"id": "791fd87a-b617-4be9-8be1-1600346e469f",
					"uid": "0-791fd87a-b617-4be9-8be1-1600346e469f",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "b8ee6c7d-66a6-4659-9807-3e82901417d4"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "088ccd15-fe12-4788-9417-8a753408e69c",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c50d82ab-d60e-48ba-92f9-2312c6af7381",
					"uid": "0-c50d82ab-d60e-48ba-92f9-2312c6af7381",
					"name": "Delete model success",
					"url": "localhost:8080/model/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Item has been removed successfully\");",
									"});"
								],
								"type": "text/javascript",
								"id": "6974f0f8-9720-4d69-a719-a550e00f1c5d"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Item has been removed successfully\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "088ccd15-fe12-4788-9417-8a753408e69c",
					"rawModeData": "{\n    \"modelName\": \"nuovo modello\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "db0a3ea5-0012-41d9-afba-7111be39406c",
					"uid": "0-db0a3ea5-0012-41d9-afba-7111be39406c",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "7c22f4be-13a6-4447-bda1-f4cfd5d07d3d"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "088ccd15-fe12-4788-9417-8a753408e69c",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "f96a75ae-7774-4d50-8bc4-1f7118068b8e",
					"uid": "0-f96a75ae-7774-4d50-8bc4-1f7118068b8e",
					"name": "No model found",
					"url": "localhost:8080/model/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
									"});"
								],
								"type": "text/javascript",
								"id": "478d21da-8cb7-46e6-bfb4-4287a36abf2c"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "088ccd15-fe12-4788-9417-8a753408e69c",
					"rawModeData": "{\n    \"modelName\": \"ciccioPanzo\"\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "0c06b963-005e-4127-a4d0-da62a35ae278",
			"uid": "0-0c06b963-005e-4127-a4d0-da62a35ae278",
			"name": "2)  Load model",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"4f7b28d4-360f-4376-a362-00eb90e0e67f",
				"144fb8f1-a22d-4583-848a-cf92a247f573",
				"74739779-34b8-4ac3-8dfd-ad77653c676c",
				"b5da1d4a-88e6-4956-8ae0-26338aa95e42",
				"fe3ac4cf-31df-404d-a728-d6d565e1f262"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:41.217Z",
			"folders": [],
			"requests": [
				{
					"id": "144fb8f1-a22d-4583-848a-cf92a247f573",
					"uid": "0-144fb8f1-a22d-4583-848a-cf92a247f573",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/loadFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "90ef0e94-2cea-4c3a-b0dd-a65bdbc8e4d9"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "0c06b963-005e-4127-a4d0-da62a35ae278",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "4f7b28d4-360f-4376-a362-00eb90e0e67f",
					"uid": "0-4f7b28d4-360f-4376-a362-00eb90e0e67f",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/loadFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "4613c119-5029-487b-85a5-8cd3ae472fa2"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "0c06b963-005e-4127-a4d0-da62a35ae278",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "74739779-34b8-4ac3-8dfd-ad77653c676c",
					"uid": "0-74739779-34b8-4ac3-8dfd-ad77653c676c",
					"name": "Wrong input body",
					"url": "localhost:8080/model/loadFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");",
									"});"
								],
								"type": "text/javascript",
								"id": "856ab32e-d327-4a9e-b89a-228c1c0b1143"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "0c06b963-005e-4127-a4d0-da62a35ae278",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b5da1d4a-88e6-4956-8ae0-26338aa95e42",
					"uid": "0-b5da1d4a-88e6-4956-8ae0-26338aa95e42",
					"name": "No model found",
					"url": "localhost:8080/model/loadFile",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "works.py",
							"type": "file"
						},
						{
							"key": "modelName",
							"value": "modello non esistente",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a625827a-4c47-42ac-a293-1a7d872ec576",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "0c06b963-005e-4127-a4d0-da62a35ae278",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "fe3ac4cf-31df-404d-a728-d6d565e1f262",
					"uid": "0-fe3ac4cf-31df-404d-a728-d6d565e1f262",
					"name": "Load model success",
					"url": "localhost:8080/model/loadFile",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "works.py",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "my_eye_models_1",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d2e33e89-e783-4470-acbf-660b59cb3652",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(200);\n});\n\n",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "0c06b963-005e-4127-a4d0-da62a35ae278",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "0fdf7352-9054-423b-be94-6ff13c386763",
			"uid": "0-0fdf7352-9054-423b-be94-6ff13c386763",
			"name": "3) List dataset",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"39b4ff79-2f32-445a-99dd-18d74e6fd416",
				"945a52dc-bb78-4338-b27f-2b7b6b91eb30",
				"64db59a9-75b8-4b35-a3b2-142d5ec1a2ce"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:44.151Z",
			"folders": [],
			"requests": [
				{
					"id": "39b4ff79-2f32-445a-99dd-18d74e6fd416",
					"uid": "0-39b4ff79-2f32-445a-99dd-18d74e6fd416",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/list",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e9cc6cba-5498-4f66-8316-d695075db891"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "0fdf7352-9054-423b-be94-6ff13c386763",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "64db59a9-75b8-4b35-a3b2-142d5ec1a2ce",
					"uid": "0-64db59a9-75b8-4b35-a3b2-142d5ec1a2ce",
					"name": "List dataset success",
					"url": "localhost:8080/dataset/list",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.datasetList).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript",
								"id": "23bdff49-1101-417e-8635-7f4e4af73d9c"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.datasetList).to.be.an(\"array\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "0fdf7352-9054-423b-be94-6ff13c386763",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "945a52dc-bb78-4338-b27f-2b7b6b91eb30",
					"uid": "0-945a52dc-bb78-4338-b27f-2b7b6b91eb30",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/list",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ciaociao",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9ecf2a24-42c6-4387-96a7-10394d03019e"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ciaociao"
					},
					"collectionId": "0fdf7352-9054-423b-be94-6ff13c386763",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
			"uid": "0-1137d8b7-6003-4d95-b04d-7181c0d0541b",
			"name": "1) Login",
			"description": null,
			"auth": {
				"type": "bearer",
				"bearer": []
			},
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "92d15d9a-4124-4cb5-acb3-71c38edbdba6"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "dec74086-ca0d-4ea2-9226-1fca152d215f"
					}
				}
			],
			"variables": [],
			"order": [
				"b62b5bfd-f885-4309-a0bb-97d29d579312",
				"d4fe2dc1-4718-4175-8d51-8280fe0c4f0c",
				"e0abc8ea-6bc4-49c2-9a17-a8ce9b305fd5",
				"5447f85e-8569-4e10-bb41-358a11842004",
				"26f29232-54bb-4822-932d-7da935ede878",
				"81baa6b7-06b0-4f6b-8c36-a94781d14e4c",
				"1cde9eae-49e7-4805-82e8-4a7ffcfe92f4",
				"adef3ce0-1397-42e9-b2c5-0435705ac4c6",
				"ea9826e3-82ba-484b-982c-f48d4c097dfc",
				"4b12da89-f1b2-4e89-8d6b-38c6c9479090",
				"bb38631d-ef81-4874-84bb-05f7286ddc6f"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:39.243Z",
			"folders": [],
			"requests": [
				{
					"id": "1cde9eae-49e7-4805-82e8-4a7ffcfe92f4",
					"uid": "0-1cde9eae-49e7-4805-82e8-4a7ffcfe92f4",
					"name": "Role is not set",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Role is not set\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify string 'role', you can pick 'admin' or 'user'\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "86df11d5-03e6-4e86-be21-c47dae8e8109"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Role is not set\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify string 'role', you can pick 'admin' or 'user'\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"email\",\r\n    \"username\": \"user\",\r\n    \"password\":\"password\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "26f29232-54bb-4822-932d-7da935ede878",
					"uid": "0-26f29232-54bb-4822-932d-7da935ede878",
					"name": "Email not valid",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fe1e7e0d-b25d-4a47-9294-4a366d141aeb"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"emailnonvalida.it\",\r\n    \"username\": \"pippo\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "4b12da89-f1b2-4e89-8d6b-38c6c9479090",
					"uid": "0-4b12da89-f1b2-4e89-8d6b-38c6c9479090",
					"name": "Create success (admin)",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.info.payload.username).to.eql(\"admin\");\r",
									"  pm.expect(jsonData.info.payload.role).to.eql(\"admin\");\r",
									"  pm.expect(jsonData.info.payload.password).to.eql(\"password1\");\r",
									"  pm.expect(jsonData.info.payload.email).to.eql(\"admin@admin.it\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "de92ac18-3188-4d32-8b79-9922258441bc"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Create success\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.info.payload.username).to.eql(\"admin\");\r\n  pm.expect(jsonData.info.payload.role).to.eql(\"admin\");\r\n  pm.expect(jsonData.info.payload.password).to.eql(\"password1\");\r\n  pm.expect(jsonData.info.payload.email).to.eql(\"admin@admin.it\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"admin@admin.it\",\r\n    \"username\": \"admin\",\r\n    \"role\":\"admin\",\r\n    \"password\": \"password1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "5447f85e-8569-4e10-bb41-358a11842004",
					"uid": "0-5447f85e-8569-4e10-bb41-358a11842004",
					"name": "Email is not set",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email is not set\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9a5895b7-d984-470e-82a0-3f0ffd044f27"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Email is not set\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"username\": \"user\",\r\n    \"role\":\"admin\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "81baa6b7-06b0-4f6b-8c36-a94781d14e4c",
					"uid": "0-81baa6b7-06b0-4f6b-8c36-a94781d14e4c",
					"name": "Password is not set",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Password is not set\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "f5332fb3-4ff0-4070-9bbb-701ed7170a97"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Password is not set\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"email\",\r\n    \"username\": \"user\",\r\n    \"role\":\"admin\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "adef3ce0-1397-42e9-b2c5-0435705ac4c6",
					"uid": "0-adef3ce0-1397-42e9-b2c5-0435705ac4c6",
					"name": "Email not in database",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email not in database\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Email or password not valid\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "cba26a48-ee0b-46d3-afbd-2be58363d1c3"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Email not in database\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Email or password not valid\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"pippo.pippo@hotmail.it\",\r\n    \"username\": \"user\",\r\n    \"role\":\"user\",\r\n    \"password\": \"password1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b62b5bfd-f885-4309-a0bb-97d29d579312",
					"uid": "0-b62b5bfd-f885-4309-a0bb-97d29d579312",
					"name": "Error in json body",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "text"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Error in json body\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Your request body need to be a JSON object\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "da6dcfaf-579f-46f4-826b-0e08750a852e"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Error in json body\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Your request body need to be a JSON object\");\r\n});\r\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{   eeeeeeeeeeeeeee\r\n    \"username\": \"1000,\r\n    \"role\":\"admi\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "bb38631d-ef81-4874-84bb-05f7286ddc6f",
					"uid": "0-bb38631d-ef81-4874-84bb-05f7286ddc6f",
					"name": "Create success (user)",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create success\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.info.payload.username).to.eql(\"user\");\r",
									"  pm.expect(jsonData.info.payload.role).to.eql(\"user\");\r",
									"  pm.expect(jsonData.info.payload.password).to.eql(\"password2\");\r",
									"  pm.expect(jsonData.info.payload.email).to.eql(\"users1@users1.it\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fc4611e7-3435-4739-ac05-ceac74be93b5"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Create success\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.info.payload.username).to.eql(\"user\");\r\n  pm.expect(jsonData.info.payload.role).to.eql(\"user\");\r\n  pm.expect(jsonData.info.payload.password).to.eql(\"password2\");\r\n  pm.expect(jsonData.info.payload.email).to.eql(\"users1@users1.it\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"users1@users1.it\",\r\n    \"username\": \"user\",\r\n    \"role\":\"user\",\r\n    \"password\": \"password2\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d4fe2dc1-4718-4175-8d51-8280fe0c4f0c",
					"uid": "0-d4fe2dc1-4718-4175-8d51-8280fe0c4f0c",
					"name": "Username is not set",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Username is not set\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "96d2c56b-8623-4448-a43a-87beae28996b"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Username is not set\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \r\n    \"role\":\"admin\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "e0abc8ea-6bc4-49c2-9a17-a8ce9b305fd5",
					"uid": "0-e0abc8ea-6bc4-49c2-9a17-a8ce9b305fd5",
					"name": "Username too long",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No username\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "5dca80ae-fe40-4cf3-afab-7db90d1b31ff"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No username\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"pippo.pippo@pippo.itt\",\r\n    \"username\": \"pippopippopippopippopippopippoo\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ea9826e3-82ba-484b-982c-f48d4c097dfc",
					"uid": "0-ea9826e3-82ba-484b-982c-f48d4c097dfc",
					"name": "Email in database, but wrong password",
					"url": "localhost:8080/user/login",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email in database, but wrong password\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Email or password not valid\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a3a328ef-2303-4b5c-93b0-a81efecadb45"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Email in database, but wrong password\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Email or password not valid\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "1137d8b7-6003-4d95-b04d-7181c0d0541b",
					"rawModeData": "{\r\n    \"email\": \"admin@admin.it\",\r\n    \"username\": \"user\",\r\n    \"role\":\"user\",\r\n    \"password\": \"password_errata\"\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
			"uid": "0-1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
			"name": "1) SignUp",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"ca1ccaca-dfc1-4c72-85f6-f82697aa7516",
				"480fe23b-cc36-4883-92fb-45e09ee18565",
				"1309d68d-c524-41c2-bbdc-f94e6778da03",
				"d96626db-9367-41c4-844c-99651c8c5fb3",
				"3feef7d9-b2cc-4a5e-9817-820f6b11a5f3",
				"26552a6f-c0b2-411d-a4d3-97baa2c9b0a0",
				"e18e7cbf-8b65-4b9d-bc40-fa9b54a022fb"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:40.251Z",
			"folders": [],
			"requests": [
				{
					"id": "1309d68d-c524-41c2-bbdc-f94e6778da03",
					"uid": "0-1309d68d-c524-41c2-bbdc-f94e6778da03",
					"name": "No email",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "21b0c6a6-852b-4339-a6d5-e4fc50e58286"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"username\": \"pippo\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "26552a6f-c0b2-411d-a4d3-97baa2c9b0a0",
					"uid": "0-26552a6f-c0b2-411d-a4d3-97baa2c9b0a0",
					"name": "Ceate success",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "48ba84fb-57e5-4921-a173-9514f8c61c11",
								"exec": [
									"pm.test(\"User created\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.eql(100);\r",
									"    pm.expect(jsonData.email).to.eql(\"new.user@hotmail.it\");\r",
									"    pm.expect(jsonData.username).to.eql(\"new\");\r",
									"    pm.expect(jsonData.password).to.eql(\"secret\");\r",
									"    pm.expect(jsonData.role).to.eql(\"user\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"User created\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n    pm.expect(jsonData.token).to.eql(100);\r\n    pm.expect(jsonData.email).to.eql(\"new.user@hotmail.it\");\r\n    pm.expect(jsonData.username).to.eql(\"new\");\r\n    pm.expect(jsonData.password).to.eql(\"secret\");\r\n    pm.expect(jsonData.role).to.eql(\"user\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"email\": \"new.user@hotmail.it\",\r\n    \"username\": \"new\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3feef7d9-b2cc-4a5e-9817-820f6b11a5f3",
					"uid": "0-3feef7d9-b2cc-4a5e-9817-820f6b11a5f3",
					"name": "No password",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No password\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'password' (max 80 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "867477ee-6766-4d86-b52a-8cf5e4ca830c"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No password\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'password' (max 80 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"email\": \"pippo.pippo@pippo.it\",\r\n    \"username\": \"pippo\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "480fe23b-cc36-4883-92fb-45e09ee18565",
					"uid": "0-480fe23b-cc36-4883-92fb-45e09ee18565",
					"name": "Username too long",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No username\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "267def92-ba9b-401a-8c32-a3cfacc0639e"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No username\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"email\": \"pippo.pippo@pippo.itt\",\r\n    \"username\": \"pippopippopippopippopippopippoo\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ca1ccaca-dfc1-4c72-85f6-f82697aa7516",
					"uid": "0-ca1ccaca-dfc1-4c72-85f6-f82697aa7516",
					"name": "No username",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No username\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fe60bd0c-4fbd-4f49-a665-d2807f5d860a"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No username\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"email\": \"pippo.pippo@pippo.it\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d96626db-9367-41c4-844c-99651c8c5fb3",
					"uid": "0-d96626db-9367-41c4-844c-99651c8c5fb3",
					"name": "Email not valid",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "069808fe-ac1d-43b9-a7f8-4eb0fe8fb081"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid string 'email' (max 50 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"email\": \"emailnonvalida.it\",\r\n    \"username\": \"pippo\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "e18e7cbf-8b65-4b9d-bc40-fa9b54a022fb",
					"uid": "0-e18e7cbf-8b65-4b9d-bc40-fa9b54a022fb",
					"name": "User already exists",
					"url": "localhost:8080/user/signUp",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User already exists\", function () {\r",
									"  pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"User already exists\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "b37c2e13-bb89-4d39-8f2d-36618fba62d5"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d3682293-5762-4489-a118-295ee33d4585"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"User already exists\", function () {\r\n  pm.response.to.have.status(409);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"User already exists\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEwMDAiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2NTc0OTA0MzIsImV4cCI6MTY1NzQ5NDAzMn0.6VT_1O_8-GDNzLulq0zxU8CM7MLYd90fMi3IVbe7nQY"
					},
					"collectionId": "1a797793-dc39-4c76-84d7-1d7f9c90dfd6",
					"rawModeData": "{\r\n    \"email\": \"new.user@hotmail.it\",\r\n    \"username\": \"new\",\r\n    \"password\": \"secret\"\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
			"uid": "0-554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
			"name": "2) Create model",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"e8139db1-9338-42db-b82b-6012e810e794",
				"b053b432-e6a6-4dba-be62-3673acba011f",
				"2d396560-123f-4467-a2ee-bc74549eb695",
				"57289a33-e7c4-4a8d-b23a-56b1ebec02e0",
				"079a465a-d195-4108-93d2-329e7a9a7b38",
				"55209871-66d7-40c2-aa3b-3f1e02774b43",
				"456c59fc-f353-408e-987e-d094474612bd",
				"7acc23d2-b791-4114-ab1e-e0a6b55a917c",
				"774f4a5c-a184-4f37-a64b-ec6ae987f0c0"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:40.386Z",
			"folders": [],
			"requests": [
				{
					"id": "079a465a-d195-4108-93d2-329e7a9a7b38",
					"uid": "0-079a465a-d195-4108-93d2-329e7a9a7b38",
					"name": "No dataset with this name",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f0ff219e-51c8-4e30-842e-8ccc2a53c5ad",
								"exec": [
									"pm.test(\"No dataset found with this name\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No dataset found with this name\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset sbagliato\",\r\n    \"modelName\": \"modello numero 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "2d396560-123f-4467-a2ee-bc74549eb695",
					"uid": "0-2d396560-123f-4467-a2ee-bc74549eb695",
					"name": "No dataset",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a928324a-aa9a-46c5-abd2-4db1a3e355ab",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"modelName\": \"modello numero 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "456c59fc-f353-408e-987e-d094474612bd",
					"uid": "0-456c59fc-f353-408e-987e-d094474612bd",
					"name": "Dataset name too long",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "548d110e-fbdb-4df6-a7bf-4d5cb18a9cde",
								"exec": [
									"pm.test(\"No dataset found with this name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No dataset found with this name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset numero 1 con nome troppo lungo errore sollevato\",\r\n    \"modelName\": \"modello 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "55209871-66d7-40c2-aa3b-3f1e02774b43",
					"uid": "0-55209871-66d7-40c2-aa3b-3f1e02774b43",
					"name": "Model name too long",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "05c027b1-154b-4c30-8afa-ae5dfb9b56f7",
								"exec": [
									"pm.test(\"No dataset found with this name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No dataset found with this name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset sbagliato\",\r\n    \"modelName\": \"modello numero 1 con nome troppo lungo errore sollevato\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "57289a33-e7c4-4a8d-b23a-56b1ebec02e0",
					"uid": "0-57289a33-e7c4-4a8d-b23a-56b1ebec02e0",
					"name": "No modelName",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d77987d3-72aa-4bbc-a0a1-2a7f92b92e15",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"datasetName\": \"modello numero 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "774f4a5c-a184-4f37-a64b-ec6ae987f0c0",
					"uid": "0-774f4a5c-a184-4f37-a64b-ec6ae987f0c0",
					"name": "Create model success",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "e4c5f764-6398-4918-ad6f-2b603064f3cc",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.model.id).to.eql(4);\r",
									"  pm.expect(jsonData.model.name).to.eql(\"nuovo modello\");\r",
									"  pm.expect(jsonData.model.dataset).to.eql(1);\r",
									"  pm.expect(jsonData.model.user).to.eql(\"user\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.model.id).to.eql(4);\r\n  pm.expect(jsonData.model.name).to.eql(\"nuovo modello\");\r\n  pm.expect(jsonData.model.dataset).to.eql(1);\r\n  pm.expect(jsonData.model.user).to.eql(\"user\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"modelName\": \"nuovo modello\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "7acc23d2-b791-4114-ab1e-e0a6b55a917c",
					"uid": "0-7acc23d2-b791-4114-ab1e-e0a6b55a917c",
					"name": "Model already exists",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2f0c46ed-6ac0-4616-a07e-fe0004fc9bcd",
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You can't have two models with the same name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(409);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You can't have two models with the same name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"modelName\": \"my_eye_models_0\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b053b432-e6a6-4dba-be62-3673acba011f",
					"uid": "0-b053b432-e6a6-4dba-be62-3673acba011f",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b94ab402-e658-4ba6-98a1-c7d43b278a4c",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "e8139db1-9338-42db-b82b-6012e810e794",
					"uid": "0-e8139db1-9338-42db-b82b-6012e810e794",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "notWorks",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "feeae031-2ce9-4442-992e-43f726232f9c",
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "notWorks"
					},
					"collectionId": "554f59cd-e9d4-46da-97b1-0a9ded0f1c90",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "6d07a11d-1f39-4b73-bcf4-c05f2e6eb2fd",
			"uid": "0-6d07a11d-1f39-4b73-bcf4-c05f2e6eb2fd",
			"name": "3) Delete dataset",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"64b4cc82-e040-4e4e-a171-77f501b74e9f",
				"ff996a2c-e8a6-4470-b5bf-9e3d3b1053a2",
				"0f887b4c-d0c2-4921-b162-dd285f958b2d",
				"de4d8d10-182e-4219-a4ab-7141c9551f1a"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:42.300Z",
			"folders": [],
			"requests": [
				{
					"id": "0f887b4c-d0c2-4921-b162-dd285f958b2d",
					"uid": "0-0f887b4c-d0c2-4921-b162-dd285f958b2d",
					"name": "No dataset found",
					"url": "localhost:8080/dataset/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");",
									"});"
								],
								"type": "text/javascript",
								"id": "54d8d8c3-f6b2-4119-a83e-596cac426738"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "6d07a11d-1f39-4b73-bcf4-c05f2e6eb2fd",
					"rawModeData": "{\n    \"datasetName\": \"dataset non esistente\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "64b4cc82-e040-4e4e-a171-77f501b74e9f",
					"uid": "0-64b4cc82-e040-4e4e-a171-77f501b74e9f",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "af06cdd6-f2e9-4893-83b6-72bba4bd3a66"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "6d07a11d-1f39-4b73-bcf4-c05f2e6eb2fd",
					"rawModeData": "{\n    \"model_name\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "de4d8d10-182e-4219-a4ab-7141c9551f1a",
					"uid": "0-de4d8d10-182e-4219-a4ab-7141c9551f1a",
					"name": "Delete dataset success",
					"url": "localhost:8080/dataset/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Item has been removed successfully\");",
									"});"
								],
								"type": "text/javascript",
								"id": "9d0fb7d9-cac5-420e-bc68-8f11ef18091d"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Item has been removed successfully\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "6d07a11d-1f39-4b73-bcf4-c05f2e6eb2fd",
					"rawModeData": "{\n    \"datasetName\": \"dataset nuovo\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ff996a2c-e8a6-4470-b5bf-9e3d3b1053a2",
					"uid": "0-ff996a2c-e8a6-4470-b5bf-9e3d3b1053a2",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/delete",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "2cf0e17b-0556-413a-854a-6200797d6120"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "6d07a11d-1f39-4b73-bcf4-c05f2e6eb2fd",
					"rawModeData": "{\n    \"model_name\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "7554d63f-8101-40b2-9c8f-3ffe7785a689",
			"uid": "0-7554d63f-8101-40b2-9c8f-3ffe7785a689",
			"name": "3) Insert zip dataset",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"1088aa1b-13e4-434f-878d-f537834ea7c0",
				"954496ed-8afc-4f37-9380-78154d5f074e",
				"ae526148-8f3f-4324-bc16-3307503d36fe",
				"769575a7-1a96-41e5-b1d6-e6043d371a97",
				"8eea8554-f84d-441e-8d07-af7b6b02a301"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T16:37:30.068Z",
			"folders": [],
			"requests": [
				{
					"id": "1088aa1b-13e4-434f-878d-f537834ea7c0",
					"uid": "0-1088aa1b-13e4-434f-878d-f537834ea7c0",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/zip",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "Archivio.zip",
							"type": "file"
						},
						{
							"key": "modelName",
							"value": "occhi_ritagliati",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "63ecad08-5764-4c83-8b7f-068ecc6c8d2f",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "7554d63f-8101-40b2-9c8f-3ffe7785a689",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "769575a7-1a96-41e5-b1d6-e6043d371a97",
					"uid": "0-769575a7-1a96-41e5-b1d6-e6043d371a97",
					"name": "No zip file input",
					"url": "localhost:8080/dataset/zip",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "Archivio.zip",
							"type": "file"
						},
						{
							"key": "datasetName",
							"value": "occhi_ritagliati",
							"type": "default",
							"enabled": false
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "8fc3ae08-2670-413b-a650-9da69e0ca6b3",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "7554d63f-8101-40b2-9c8f-3ffe7785a689",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8eea8554-f84d-441e-8d07-af7b6b02a301",
					"uid": "0-8eea8554-f84d-441e-8d07-af7b6b02a301",
					"name": "Insert zip success",
					"url": "localhost:8080/dataset/zip",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "Archivio.zip",
							"type": "file"
						},
						{
							"key": "datasetName",
							"value": "occhi_ritagliati",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c4effab2-dbec-46a1-9774-a860618d53eb",
								"exec": [
									"pm.test(\"Insert success\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Insert success\", function () {\n  pm.response.to.have.status(200);\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "7554d63f-8101-40b2-9c8f-3ffe7785a689",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "954496ed-8afc-4f37-9380-78154d5f074e",
					"uid": "0-954496ed-8afc-4f37-9380-78154d5f074e",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/zip",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "Archivio.zip",
							"type": "file"
						},
						{
							"key": "modelName",
							"value": "occhi_ritagliati",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "fa3eeef8-3c54-4536-8567-55adad1c9de8",
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ccc"
					},
					"collectionId": "7554d63f-8101-40b2-9c8f-3ffe7785a689",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ae526148-8f3f-4324-bc16-3307503d36fe",
					"uid": "0-ae526148-8f3f-4324-bc16-3307503d36fe",
					"name": "No dataset found",
					"url": "localhost:8080/dataset/zip",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "Archivio.zip",
							"type": "file",
							"enabled": true
						},
						{
							"key": "datasetName",
							"value": "dataset inesistente",
							"type": "default",
							"enabled": true
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f5c8a5d2-e21c-4e35-9bbe-86d137428a35",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "7554d63f-8101-40b2-9c8f-3ffe7785a689",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "8611f563-528e-4555-bf63-8bad76a5d743",
			"uid": "0-8611f563-528e-4555-bf63-8bad76a5d743",
			"name": "3) Insert label list",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"07c97fb3-8588-44ae-9255-04923caa9f01",
				"c90f02bc-ad3e-4a5c-a83f-738b8caf38f2",
				"22435ec0-cc09-4c4f-b6fa-4acead2b9f9b",
				"3bf1c831-01b1-4dd0-a0f6-de92c6d5a138",
				"29545f88-cf02-4f81-8f28-48fbfbe95fb3",
				"d03cc2fc-9278-4454-8868-d69aac3d8564",
				"aafe1ee1-9ea0-40ac-8a4f-25042d0f9912",
				"ebfe2826-5029-4a33-907f-eae3d5abcf65",
				"3758dac8-150b-49d6-a1b1-4b34e21e2314",
				"726823c3-5cc7-4196-b921-607afdad3876"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:43.174Z",
			"folders": [],
			"requests": [
				{
					"id": "07c97fb3-8588-44ae-9255-04923caa9f01",
					"uid": "0-07c97fb3-8588-44ae-9255-04923caa9f01",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "f098f2a7-4683-4261-bce3-d3f32de15713"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "22435ec0-cc09-4c4f-b6fa-4acead2b9f9b",
					"uid": "0-22435ec0-cc09-4c4f-b6fa-4acead2b9f9b",
					"name": "No array",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify an array \");",
									"});"
								],
								"type": "text/javascript",
								"id": "2aa4d0a8-67a8-4f3e-8d9e-d94458b1251b"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify an array \");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "{}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "29545f88-cf02-4f81-8f28-48fbfbe95fb3",
					"uid": "0-29545f88-cf02-4f81-8f28-48fbfbe95fb3",
					"name": "No malformed BoundingBoxes",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");",
									"});"
								],
								"type": "text/javascript",
								"id": "d30e9e81-1c2c-413a-a4fa-ec2fdb0c1dea"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {\r\n        \"className\": \"classe\",\r\n        \"height\": 0.1,\r\n        \"center\": 0.1,\r\n        \"imagePath\": \"ciaociao\"\r\n    }\r\n]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3758dac8-150b-49d6-a1b1-4b34e21e2314",
					"uid": "0-3758dac8-150b-49d6-a1b1-4b34e21e2314",
					"name": "No image found",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript",
								"id": "9c3633e0-e300-463e-bb34-b1f63e187d90"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData).to.be.an(\"array\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {    \r\n        \"className\": \"gatto\",\r\n            \"height\": 0.1,\r\n            \"center\": 0.1,\r\n            \"width\": 0.3,\r\n            \"imagePath\": \"path1\"\r\n        },\r\n        {\r\n            \"className\": \"cane\",\r\n            \"height\": 0.4,\r\n            \"center\": 0.3,\r\n            \"width\": 0.2,\r\n            \"imagePath\": \"path2\"\r\n        }\r\n]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3bf1c831-01b1-4dd0-a0f6-de92c6d5a138",
					"uid": "0-3bf1c831-01b1-4dd0-a0f6-de92c6d5a138",
					"name": "No className",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'className' (max 30 char)\");",
									"});"
								],
								"type": "text/javascript",
								"id": "779c4160-8da7-48c2-8009-fbbedc42b4b1"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'className' (max 30 char)\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {\r\n        \"height\": 0.1,\r\n        \"center\": 0.1,\r\n        \"width\": 0.3,\r\n        \"imagePath\": \"ciaociao\"\r\n    }\r\n]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "726823c3-5cc7-4196-b921-607afdad3876",
					"uid": "0-726823c3-5cc7-4196-b921-607afdad3876",
					"name": "Insert Label list success (the last is duplicated)",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript",
								"id": "d612bc4e-a0bb-4519-bef9-a380deb88049"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData).to.be.an(\"array\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {\r\n        \"className\": \"classe 4\",\r\n        \"height\": 0.1,\r\n        \"center\": 0.4,\r\n        \"width\": 0.3,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    },\r\n    {\r\n        \"className\": \"classe 1\",\r\n        \"height\": 0.2,\r\n        \"center\": 0.4,\r\n        \"width\": 0.9,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    },\r\n    {\r\n        \"className\": \"classe 7\",\r\n        \"height\": 0.3,\r\n        \"center\": 0.4,\r\n        \"width\": 0.2,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    },\r\n    {\r\n        \"className\": \"classe 7\",\r\n        \"height\": 0.3,\r\n        \"center\": 0.4,\r\n        \"width\": 0.2,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    }\r\n]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "aafe1ee1-9ea0-40ac-8a4f-25042d0f9912",
					"uid": "0-aafe1ee1-9ea0-40ac-8a4f-25042d0f9912",
					"name": "No imagePath",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'imagePath'\");",
									"});"
								],
								"type": "text/javascript",
								"id": "a4eb42f9-f426-4162-8cd4-cd40750eee17"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'imagePath'\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {\r\n        \"className\": \"gatto\",\r\n        \"height\": 0.1,\r\n        \"center\": 0.1,\r\n        \"width\": 0.3\r\n    }\r\n]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c90f02bc-ad3e-4a5c-a83f-738b8caf38f2",
					"uid": "0-c90f02bc-ad3e-4a5c-a83f-738b8caf38f2",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ciaociao",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a8d959a2-48be-4536-9713-8f47e3b3924e"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ciaociao"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d03cc2fc-9278-4454-8868-d69aac3d8564",
					"uid": "0-d03cc2fc-9278-4454-8868-d69aac3d8564",
					"name": "Not normalized BoundingBoxes",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");",
									"});"
								],
								"type": "text/javascript",
								"id": "82755445-1e6d-4381-ba87-dcf0957f17e8"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 2,\r\n    \"width\": 0.3,\r\n    \"imagePath\": \"ciaociao\"\r\n    }\r\n]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ebfe2826-5029-4a33-907f-eae3d5abcf65",
					"uid": "0-ebfe2826-5029-4a33-907f-eae3d5abcf65",
					"name": "className already exists",
					"url": "localhost:8080/dataset/labelList",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript",
								"id": "d4babe87-e306-4c86-9dc6-6c8ba3730705"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData).to.be.an(\"array\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "8611f563-528e-4555-bf63-8bad76a5d743",
					"rawModeData": "[\r\n    {\r\n        \"className\": \"classe 5\",\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    }\r\n]",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "996e4f61-3b93-41b0-9dfc-b646f267976e",
			"uid": "0-996e4f61-3b93-41b0-9dfc-b646f267976e",
			"name": "2) Update model file",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"c449c2df-f42c-4382-8ff0-684b5aead75d",
				"ea0773b5-fb86-4bdf-be48-025789a4ced3",
				"d4f0c638-71c0-4054-8396-564b49a009fd",
				"7c8b66f5-ab03-4366-bd4b-393e5a739dd5",
				"250385da-b376-4e65-8bc9-efebb542c908"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-19T12:37:11.618Z",
			"folders": [],
			"requests": [
				{
					"id": "250385da-b376-4e65-8bc9-efebb542c908",
					"uid": "0-250385da-b376-4e65-8bc9-efebb542c908",
					"name": "Update model success",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "works.py",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "my_eye_models_1",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "625f8046-5b03-473a-b01e-8cb88fa61630",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(200);\n});\n\n",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "996e4f61-3b93-41b0-9dfc-b646f267976e",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "7c8b66f5-ab03-4366-bd4b-393e5a739dd5",
					"uid": "0-7c8b66f5-ab03-4366-bd4b-393e5a739dd5",
					"name": "No model found",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "works.py",
							"type": "file"
						},
						{
							"key": "modelName",
							"value": "modello non esistente",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2d2eaa4f-b77c-4e0d-9072-96e82b06f5d5",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "996e4f61-3b93-41b0-9dfc-b646f267976e",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c449c2df-f42c-4382-8ff0-684b5aead75d",
					"uid": "0-c449c2df-f42c-4382-8ff0-684b5aead75d",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "3eeaedac-620d-4d4b-94a1-669a0b74805e",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "996e4f61-3b93-41b0-9dfc-b646f267976e",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d4f0c638-71c0-4054-8396-564b49a009fd",
					"uid": "0-d4f0c638-71c0-4054-8396-564b49a009fd",
					"name": "Wrong input body",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c5803ef7-2c6e-42ae-9074-69d41afd88b1",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "996e4f61-3b93-41b0-9dfc-b646f267976e",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ea0773b5-fb86-4bdf-be48-025789a4ced3",
					"uid": "0-ea0773b5-fb86-4bdf-be48-025789a4ced3",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b9cb03b9-2db4-4c75-887a-38130727e6e8",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "996e4f61-3b93-41b0-9dfc-b646f267976e",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
			"uid": "0-9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
			"name": "3) Insert image dataset",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"41cc2ca7-77f1-4c52-9935-8a08ceeacdf4",
				"57d3d336-72e0-44ee-9e85-60ed95239191",
				"45b47d58-41c6-4412-89c2-4c12816ae793",
				"b5e729f9-28fc-4915-b899-6a03d0af2738",
				"5c5af2c7-fc63-48d3-9494-a41898d81a94",
				"4a3080ae-d2d3-4e1b-9b16-45e9c4b9e2af"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:42.749Z",
			"folders": [],
			"requests": [
				{
					"id": "41cc2ca7-77f1-4c52-9935-8a08ceeacdf4",
					"uid": "0-41cc2ca7-77f1-4c52-9935-8a08ceeacdf4",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/image",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "6e200518-e90c-4eb9-9996-a2212803a6e1",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "45b47d58-41c6-4412-89c2-4c12816ae793",
					"uid": "0-45b47d58-41c6-4412-89c2-4c12816ae793",
					"name": "Wrong input body",
					"url": "localhost:8080/dataset/image",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "8d25ee99-c9c8-43ba-90d3-1522f7c980bd",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "4a3080ae-d2d3-4e1b-9b16-45e9c4b9e2af",
					"uid": "0-4a3080ae-d2d3-4e1b-9b16-45e9c4b9e2af",
					"name": "Insert image success",
					"url": "localhost:8080/dataset/image",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "matrix.jpg",
							"type": "file",
							"enabled": true
						},
						{
							"key": "datasetName",
							"value": "occhi_ritagliati",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f3ab5d8e-9fe3-42bb-8281-4b32b2156676",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.data.status).to.eql(\"Image loaded\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.data.status).to.eql(\"Image loaded\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "57d3d336-72e0-44ee-9e85-60ed95239191",
					"uid": "0-57d3d336-72e0-44ee-9e85-60ed95239191",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/image",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "90a8be46-cbe5-4e36-8ca1-c8ed401ec171",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "5c5af2c7-fc63-48d3-9494-a41898d81a94",
					"uid": "0-5c5af2c7-fc63-48d3-9494-a41898d81a94",
					"name": "No fileName found",
					"url": "localhost:8080/dataset/image",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": [],
							"type": "file"
						},
						{
							"key": "datasetName",
							"value": "dataset inesistente",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5202f3e7-90bc-42a4-9d2b-11a58225e414",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'fileName' (max 40 char)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'fileName' (max 40 char)\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b5e729f9-28fc-4915-b899-6a03d0af2738",
					"uid": "0-b5e729f9-28fc-4915-b899-6a03d0af2738",
					"name": "No dataset found",
					"url": "localhost:8080/dataset/image",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "matrix.jpg",
							"type": "file"
						},
						{
							"key": "datasetName",
							"value": "dataset inesistente",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "cc1f1ef9-bd59-4e15-87e6-b30fa4b4e7a6",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "9c9c6d43-89ee-4f5a-b2e3-e4639514069b",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "9cccb642-a8d2-4321-94d2-310cdab41471",
			"uid": "0-9cccb642-a8d2-4321-94d2-310cdab41471",
			"name": "2) Update model metadata",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"b02c5120-9ae8-47f2-82ee-af7314ac277d",
				"d5c4fe81-6a01-4ed4-adbb-0922554d0380",
				"142de5c3-15e9-4644-96e0-0abd74edca71",
				"6c5bfd2c-1d26-412b-9e69-0ceef4b51d72"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-19T14:48:16.981Z",
			"folders": [],
			"requests": [
				{
					"id": "142de5c3-15e9-4644-96e0-0abd74edca71",
					"uid": "0-142de5c3-15e9-4644-96e0-0abd74edca71",
					"name": "No model found",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0a3884cd-0f84-4319-abea-9c844d681c7b",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "9cccb642-a8d2-4321-94d2-310cdab41471",
					"rawModeData": "{\n    \"modelName\": \"my_eye_modls_2\",\n    \"newModelName\": \"my_eye_models_2\",\n    \"datasetName\": \"pappagalli parlanti\"   \n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "6c5bfd2c-1d26-412b-9e69-0ceef4b51d72",
					"uid": "0-6c5bfd2c-1d26-412b-9e69-0ceef4b51d72",
					"name": "Update model success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c44f46e3-2e3d-4e92-9905-0d6f4cb0a552",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(200);\n});\n\n",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "9cccb642-a8d2-4321-94d2-310cdab41471",
					"rawModeData": "{\n    \"modelName\": \"my_eye_models_1\",\n    \"newModelName\": \"my_eye_models_11\",\n    \"datasetName\": \"pappagalli parlanti\"   \n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b02c5120-9ae8-47f2-82ee-af7314ac277d",
					"uid": "0-b02c5120-9ae8-47f2-82ee-af7314ac277d",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2c5daab4-b898-41a0-8d75-64315368f6af",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "9cccb642-a8d2-4321-94d2-310cdab41471",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d5c4fe81-6a01-4ed4-adbb-0922554d0380",
					"uid": "0-d5c4fe81-6a01-4ed4-adbb-0922554d0380",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a5fe9bec-9831-440c-b116-b88e125cb2dd",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "9cccb642-a8d2-4321-94d2-310cdab41471",
					"rawModeData": "{}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "b33e07f6-5347-457f-920f-f48d7b332150",
			"uid": "0-b33e07f6-5347-457f-920f-f48d7b332150",
			"name": "2) Update model file",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"8aa7b0c6-400f-41e3-b085-eb0ccec50f3c",
				"7fefcc3b-52bf-435f-9368-b71bdd3021a5",
				"50b5766b-265f-4baf-8ab9-2f57dc1f7d8a",
				"d215e6e7-c1f0-4a55-af27-ff08bd9fc292",
				"0d145e96-6569-42ff-897f-ac179c71893a"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-19T12:37:11.618Z",
			"folders": [],
			"requests": [
				{
					"id": "0d145e96-6569-42ff-897f-ac179c71893a",
					"uid": "0-0d145e96-6569-42ff-897f-ac179c71893a",
					"name": "Update model success",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "/Users/alessandro/Desktop/vscode/dataset-manager/postman/fileTest/works.py",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "my_eye_models_2",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f2dfac5e-7489-43a2-bccc-8933c19eb89b",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(200);\n});\n\n",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "b33e07f6-5347-457f-920f-f48d7b332150",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "50b5766b-265f-4baf-8ab9-2f57dc1f7d8a",
					"uid": "0-50b5766b-265f-4baf-8ab9-2f57dc1f7d8a",
					"name": "Wrong input body",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "4a9fb34c-7251-48e7-8b18-b1ee0a6dd628",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "b33e07f6-5347-457f-920f-f48d7b332150",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "7fefcc3b-52bf-435f-9368-b71bdd3021a5",
					"uid": "0-7fefcc3b-52bf-435f-9368-b71bdd3021a5",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b2fe0573-a76d-4e03-bde7-54dfcc206365",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "b33e07f6-5347-457f-920f-f48d7b332150",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8aa7b0c6-400f-41e3-b085-eb0ccec50f3c",
					"uid": "0-8aa7b0c6-400f-41e3-b085-eb0ccec50f3c",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "cbfcbea0-3aef-4860-a4e6-9a666449ea8e",
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "b33e07f6-5347-457f-920f-f48d7b332150",
					"rawModeData": "{\n    \"modelName\": \"new_model\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d215e6e7-c1f0-4a55-af27-ff08bd9fc292",
					"uid": "0-d215e6e7-c1f0-4a55-af27-ff08bd9fc292",
					"name": "No model found",
					"url": "localhost:8080/model/updateFile",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "prova.py",
							"type": "file"
						},
						{
							"key": "modelName",
							"value": "modello non esistente",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f0956881-bd14-4fbd-a7f3-7b083ced130b",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "b33e07f6-5347-457f-920f-f48d7b332150",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "bb8e0a9f-4081-4add-a78d-0551306209a5",
			"uid": "0-bb8e0a9f-4081-4add-a78d-0551306209a5",
			"name": "2) Inference model",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"bed083f3-ccbe-4fae-bc68-966bda248ba7",
				"b48d5455-3b67-4029-8c1a-c9d33436dd39",
				"237e85f0-1d92-443a-bfee-011a66ab90fc",
				"32c39e9b-ca24-436b-8952-96360cef810d",
				"65731566-5ca9-4730-8995-9fbf0624b1de"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:37.542Z",
			"folders": [],
			"requests": [
				{
					"id": "237e85f0-1d92-443a-bfee-011a66ab90fc",
					"uid": "0-237e85f0-1d92-443a-bfee-011a66ab90fc",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/inference",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "prova.py",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "occhi_ritagliati",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "e358bb6b-095c-46ae-9e96-8dca8a8a2182",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "bb8e0a9f-4081-4add-a78d-0551306209a5",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "32c39e9b-ca24-436b-8952-96360cef810d",
					"uid": "0-32c39e9b-ca24-436b-8952-96360cef810d",
					"name": "Inference success",
					"url": "localhost:8080/model/inference",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "matrix.jpg",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "my_eye_models_1",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "588a3a7a-5d19-4b22-a0b0-ca29a8276e7b",
								"exec": [
									"pm.test(\"Inference success\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Inference success\", function () {\n  pm.response.to.have.status(201);\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bb8e0a9f-4081-4add-a78d-0551306209a5",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "65731566-5ca9-4730-8995-9fbf0624b1de",
					"uid": "0-65731566-5ca9-4730-8995-9fbf0624b1de",
					"name": "Inference not success",
					"url": "localhost:8080/model/inference",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "matrix.jpg",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "my_eye_models_1",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "e4bd6cbb-3d4a-499a-ae5a-7168c91ca5fb",
								"exec": [
									"pm.test(\"Inference not success\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Inference not success\", function () {\n  pm.response.to.have.status(201);\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bb8e0a9f-4081-4add-a78d-0551306209a5",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b48d5455-3b67-4029-8c1a-c9d33436dd39",
					"uid": "0-b48d5455-3b67-4029-8c1a-c9d33436dd39",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/inference",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "matrix.jpg",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "my_eye_models_2",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "notWorks",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2d786204-6789-464c-b12c-9cccbc450894",
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "notWorks"
					},
					"collectionId": "bb8e0a9f-4081-4add-a78d-0551306209a5",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "bed083f3-ccbe-4fae-bc68-966bda248ba7",
					"uid": "0-bed083f3-ccbe-4fae-bc68-966bda248ba7",
					"name": "No model found",
					"url": "localhost:8080/model/inference",
					"description": null,
					"data": [
						{
							"key": "fileName",
							"value": "matrix.jpg",
							"type": "file",
							"enabled": true
						},
						{
							"key": "modelName",
							"value": "occhi_ritagliati",
							"type": "default"
						}
					],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "params",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f472e1f5-d112-47c1-b6c0-e9078e9f0168",
								"exec": [
									"pm.test(\"No model found\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model found\", function () {\n  pm.response.to.have.status(404);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bb8e0a9f-4081-4add-a78d-0551306209a5",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
			"uid": "0-bffea72f-cbab-4e69-8f9b-15e62cf64909",
			"name": "2) Update model metadata",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"8cfdbca7-7f2f-48d0-81ec-b7e34409e0b3",
				"22c146ff-02fd-47ce-accd-0094e034c6ce",
				"150fb3e0-df89-48ef-a875-d936e402567f",
				"8d81e829-1289-446c-8ebe-5af0a46c67c2",
				"cc95dce8-c06b-4f32-847b-acc4fc410197",
				"3aeca799-544f-431b-8e34-ecc25e21c158",
				"fe479ce1-3cee-4161-9ada-0d6f51ecfad0",
				"7b8ac0e8-db50-45e9-9092-4b2d0b932616",
				"47efeb51-6c9d-4a30-a25e-2457e3bfd2a0"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:41.530Z",
			"folders": [],
			"requests": [
				{
					"id": "150fb3e0-df89-48ef-a875-d936e402567f",
					"uid": "0-150fb3e0-df89-48ef-a875-d936e402567f",
					"name": "No model input",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e29ec914-9761-4a2a-baab-837a7f5e067b"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "22c146ff-02fd-47ce-accd-0094e034c6ce",
					"uid": "0-22c146ff-02fd-47ce-accd-0094e034c6ce",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "4491b2de-3e07-46c9-aa97-f41208511c57"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\n    \"modelName\": \"star wars\",\n    \"newModelName\": \"star wars nuovo\",\n    \"datasetName\": \"occhi_ritagliati\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3aeca799-544f-431b-8e34-ecc25e21c158",
					"uid": "0-3aeca799-544f-431b-8e34-ecc25e21c158",
					"name": "No input metadata",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No input metadata\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No input metadata\");",
									"});"
								],
								"type": "text/javascript",
								"id": "5c5676cc-b5bc-4bc0-8f72-e49af3c18b93"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No input metadata\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No input metadata\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\n    \"modelName\": \"star wars_27\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "47efeb51-6c9d-4a30-a25e-2457e3bfd2a0",
					"uid": "0-47efeb51-6c9d-4a30-a25e-2457e3bfd2a0",
					"name": "Update all success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a93dcc14-981e-4a85-ab05-ecca8f90a50d"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\r\n    \"modelName\": \"modello nuovo\",\r\n    \"newModelName\": \"modello nuovooo\",\r\n    \"datasetName\": \"occhio_dx\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "7b8ac0e8-db50-45e9-9092-4b2d0b932616",
					"uid": "0-7b8ac0e8-db50-45e9-9092-4b2d0b932616",
					"name": "Update modelName success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fd6675ab-5d97-49a6-9df5-5202df9d290d"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\r\n    \"modelName\": \"modello nuovo\",\r\n    \"newModelName\": \"nuovo modello nuovo\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8cfdbca7-7f2f-48d0-81ec-b7e34409e0b3",
					"uid": "0-8cfdbca7-7f2f-48d0-81ec-b7e34409e0b3",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "288ff9df-51be-42f2-8c1e-44e891f5b4b5"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\n    \"modelName\": \"star wars\",\n    \"newModelName\": \"star wars nuovo\",\n    \"datasetName\": \"occhi_ritagliati\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8d81e829-1289-446c-8ebe-5af0a46c67c2",
					"uid": "0-8d81e829-1289-446c-8ebe-5af0a46c67c2",
					"name": "Model not found",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "6310d327-ba6e-4b02-858a-95a617b54d92"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\r\n    \"modelName\": \"modello non esistente\",\r\n    \"newModelName\": \"star wars nuovo3\"\r\n\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "cc95dce8-c06b-4f32-847b-acc4fc410197",
					"uid": "0-cc95dce8-c06b-4f32-847b-acc4fc410197",
					"name": "Dataset not found",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "7e55a025-9493-42e1-9578-d9ef0686ae95"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\r\n    \"modelName\": \"nuovo modello\",\r\n    \"datasetName\": \"dataset non esistente\"\r\n\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "fe479ce1-3cee-4161-9ada-0d6f51ecfad0",
					"uid": "0-fe479ce1-3cee-4161-9ada-0d6f51ecfad0",
					"name": "Update datasetName success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "1d2054d2-b7b3-4c0d-b48f-2fcd9eb2e064"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "bffea72f-cbab-4e69-8f9b-15e62cf64909",
					"rawModeData": "{\r\n    \"modelName\": \"modello nuovo\",\r\n    \"datasetName\": \"occhio_dx\"\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
			"uid": "0-d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
			"name": "3) Create dataset",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"bd5b66f6-934a-4b4b-af81-48c7a6031041",
				"35120a8e-4b9b-49ed-aaab-1dfa90004936",
				"b99ab574-cce5-4edd-824a-21a171a3958f",
				"50eb809c-57b8-4d74-864e-9cfbb90b8ff2",
				"b15dc02b-1194-440e-b849-88e5264c78cc",
				"438adc6f-0d24-4c6e-aac7-318fcdeabcd6",
				"2cfe0b1e-e6a6-47e5-b712-7337af9b100e",
				"d1afb6e5-5706-438d-b183-ef016e0d0de4",
				"82be05aa-2905-4b27-a522-a0d1eb3ad66d"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:41.768Z",
			"folders": [],
			"requests": [
				{
					"id": "2cfe0b1e-e6a6-47e5-b712-7337af9b100e",
					"uid": "0-2cfe0b1e-e6a6-47e5-b712-7337af9b100e",
					"name": "Keyword duplicate",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5284ebbb-73a6-46fd-ac8d-ef6a7a24a2c4",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You have to specify the 'keywords' array (max 30 char for element, no duplicates allowed)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You have to specify the 'keywords' array (max 30 char for element, no duplicates allowed)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"datasetName\": \"dogs&cats\",\r\n    \"keywords\": [\"cane\", \"gattoyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyrrrrrrrrrrrrrrrrrrrrrrrttttttt\"],\r\n    \"classes\":33\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "35120a8e-4b9b-49ed-aaab-1dfa90004936",
					"uid": "0-35120a8e-4b9b-49ed-aaab-1dfa90004936",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ciaociao",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c9037529-75fd-4e89-8c92-614c7c8ad17a",
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ciaociao"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "438adc6f-0d24-4c6e-aac7-318fcdeabcd6",
					"uid": "0-438adc6f-0d24-4c6e-aac7-318fcdeabcd6",
					"name": "Keyword too long",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "02434981-2b32-4320-a743-ef8720d0e75b",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You have to specify the 'keywords' array (max 30 char for element, no duplicates allowed)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You have to specify the 'keywords' array (max 30 char for element, no duplicates allowed)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"datasetName\": \"dogs&ats\",\r\n    \"keywords\": [\"cane\", \"cane\"],\r\n    \"classes\":33\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "50eb809c-57b8-4d74-864e-9cfbb90b8ff2",
					"uid": "0-50eb809c-57b8-4d74-864e-9cfbb90b8ff2",
					"name": "Too many classes",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "fbb07e5a-90f8-4e3a-81ee-9f0fc3eaf6b7",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You have to specify number 'classes' (max 120)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You have to specify number 'classes' (max 120)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"datasetName\": \"dogs&cats\",\r\n    \"keywords\": [\"cane\", \"gatto\"],\r\n    \"classes\":222\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "82be05aa-2905-4b27-a522-a0d1eb3ad66d",
					"uid": "0-82be05aa-2905-4b27-a522-a0d1eb3ad66d",
					"name": "One dataset with this name already exists",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "50ed5169-2e20-434e-ba9e-46bb05261fb8",
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Dataset already exists\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(409);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Dataset already exists\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset nuovo\",\r\n    \"keywords\": [\"cane\", \"gatto\"],\r\n    \"classes\": 2\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b15dc02b-1194-440e-b849-88e5264c78cc",
					"uid": "0-b15dc02b-1194-440e-b849-88e5264c78cc",
					"name": "No numClasses",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "416d6a79-06b3-4425-9214-ff08888a7951",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You have to specify number 'classes' (max 120)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You have to specify number 'classes' (max 120)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"datasetName\": \"dogs&cats\",\r\n    \"keywords\": [\"cane\", \"gatto\"]\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b99ab574-cce5-4edd-824a-21a171a3958f",
					"uid": "0-b99ab574-cce5-4edd-824a-21a171a3958f",
					"name": "No datasetName",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "104761c5-fafe-42f8-aa93-0ac57ea844ae",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"keywords\": [\"cane\", \"gatto\"],\r\n    \"numClasses\": 2\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "bd5b66f6-934a-4b4b-af81-48c7a6031041",
					"uid": "0-bd5b66f6-934a-4b4b-af81-48c7a6031041",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a0307159-d677-4fd1-ae02-9645d3ac0d4a",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d1afb6e5-5706-438d-b183-ef016e0d0de4",
					"uid": "0-d1afb6e5-5706-438d-b183-ef016e0d0de4",
					"name": "Create dataset success",
					"url": "localhost:8080/dataset/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "8da44d23-1839-4699-a4e9-0cd336bb3b34",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Dataset has been created with success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Dataset has been created with success\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d0bacb4d-10d6-41dd-b2b6-75c7246750a2",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset nuovo\",\r\n    \"keywords\": [\"cane\", \"gatto\"],\r\n    \"classes\": 2\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "d3c8d600-8bd8-4267-9b3e-0c053b648b24",
			"uid": "0-d3c8d600-8bd8-4267-9b3e-0c053b648b24",
			"name": "1) Residual tokens",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"4633b691-9035-4209-a585-4c5bdb7f0a80",
				"45351299-fca7-4ec2-8979-e1683c3b1ad5"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:40.135Z",
			"folders": [],
			"requests": [
				{
					"id": "45351299-fca7-4ec2-8979-e1683c3b1ad5",
					"uid": "0-45351299-fca7-4ec2-8979-e1683c3b1ad5",
					"name": "Get Success",
					"url": "localhost:8080/user/residualToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a0bfef24-ee67-4d1a-81bd-70035f37e30b",
								"exec": [
									"pm.test(\"Get success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.token).to.eql(80);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"Get success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.token).to.eql(80);\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d3c8d600-8bd8-4267-9b3e-0c053b648b24",
					"rawModeData": "{}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "4633b691-9035-4209-a585-4c5bdb7f0a80",
					"uid": "0-4633b691-9035-4209-a585-4c5bdb7f0a80",
					"name": "No tokenJWT",
					"url": "localhost:8080/user/residualToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "e618f827-5581-4647-b7a2-d1132638c0fe",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "d3c8d600-8bd8-4267-9b3e-0c053b648b24",
					"rawModeData": "{}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
			"uid": "0-d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
			"name": "1) Refill tokens",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"402de05a-7eae-46b9-a126-6f04d8c61b25",
				"8bde1a20-0b72-4d1d-abde-7b6632177949",
				"3acf5e1c-9c5b-42d7-8c5e-a9c8e8bd34a4",
				"61330729-971a-4746-be0b-d791cbb772ca",
				"b6e97919-8e4f-49ac-8dd8-d114f36302bf",
				"1a0fd212-ee40-42a7-a16f-194a76355c4d",
				"1952e02b-9389-4235-bf80-cba9b793ccbb",
				"502cf8cf-7bfa-4596-bbbb-931819fce931",
				"c531ebd9-2772-4ff5-8fc1-ff9595a700e0"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:39.841Z",
			"folders": [],
			"requests": [
				{
					"id": "1952e02b-9389-4235-bf80-cba9b793ccbb",
					"uid": "0-1952e02b-9389-4235-bf80-cba9b793ccbb",
					"name": "User not found",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d67789af-d478-4bc5-8329-2d361f7cf525",
								"exec": [
									"pm.test(\"User not found\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"No user found with this username\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"User not found\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"No user found with this username\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"token\": 3333,\r\n    \"username\": \"user sbagliato\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "1a0fd212-ee40-42a7-a16f-194a76355c4d",
					"uid": "0-1a0fd212-ee40-42a7-a16f-194a76355c4d",
					"name": "No username",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "8d5ab89b-ff69-4048-ace8-9a3d67696bf1",
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'username' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"token\":300\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3acf5e1c-9c5b-42d7-8c5e-a9c8e8bd34a4",
					"uid": "0-3acf5e1c-9c5b-42d7-8c5e-a9c8e8bd34a4",
					"name": "No tokens specified",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "1c58e76e-7431-429e-94de-f70c67cd76a8",
								"exec": [
									"pm.test(\"No token specified\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'token' number (max 10000)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No token specified\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'token' number (max 10000)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"user\": \"user\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "402de05a-7eae-46b9-a126-6f04d8c61b25",
					"uid": "0-402de05a-7eae-46b9-a126-6f04d8c61b25",
					"name": "No tokenJWT",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5b550390-7189-403f-86ff-e4829c3b829e",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "502cf8cf-7bfa-4596-bbbb-931819fce931",
					"uid": "0-502cf8cf-7bfa-4596-bbbb-931819fce931",
					"name": "User is not authorized (use an user token)",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5e87ed44-e2c1-4df4-b151-7f2c80d3e3bd",
								"exec": [
									"pm.test(\"User is not uthorized (use an user token)\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Sorry, you are not the admin\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"User is not uthorized (use an user token)\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Sorry, you are not the admin\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"email\": \"users1@users1.it\",\r\n    \"token\": 333\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "61330729-971a-4746-be0b-d791cbb772ca",
					"uid": "0-61330729-971a-4746-be0b-d791cbb772ca",
					"name": "Negative tokens",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "ca7fc8fb-9fb9-4897-9810-7b2b774ceb99",
								"exec": [
									"pm.test(\"Number of token can't be negative\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'token' number (max 10000)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Number of token can't be negative\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'token' number (max 10000)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"user\": \"user\",\r\n    \"token\": -10\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8bde1a20-0b72-4d1d-abde-7b6632177949",
					"uid": "0-8bde1a20-0b72-4d1d-abde-7b6632177949",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ciaociao",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "846dfca9-5c86-42cf-83db-f4e36fd5ce47",
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ciaociao"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b6e97919-8e4f-49ac-8dd8-d114f36302bf",
					"uid": "0-b6e97919-8e4f-49ac-8dd8-d114f36302bf",
					"name": "Too many tokens",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "e008efe5-84a6-4aea-98a2-271f0515e446",
								"exec": [
									"pm.test(\"Number of token can't be negative\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'token' number (max 10000)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Number of token can't be negative\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'token' number (max 10000)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"user\": \"user\",\r\n    \"token\": 100000\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c531ebd9-2772-4ff5-8fc1-ff9595a700e0",
					"uid": "0-c531ebd9-2772-4ff5-8fc1-ff9595a700e0",
					"name": "Update success",
					"url": "localhost:8080/user/updateToken",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "73ea3e06-4bf1-409d-a2ea-3a2e7e6256b6",
								"exec": [
									"pm.test(\"Update success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.username).to.eql(\"user\");\r",
									"  pm.expect(jsonData.role).to.eql(\"user\");\r",
									"  pm.expect(jsonData.password).to.eql(\"password2\");\r",
									"  pm.expect(jsonData.email).to.eql(\"users1@users1.it\");\r",
									"  pm.expect(jsonData.token).to.eql(\"80.000\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Update success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.username).to.eql(\"user\");\r\n  pm.expect(jsonData.role).to.eql(\"user\");\r\n  pm.expect(jsonData.password).to.eql(\"password2\");\r\n  pm.expect(jsonData.email).to.eql(\"users1@users1.it\");\r\n  pm.expect(jsonData.token).to.eql(\"80.000\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d4875dd0-60e6-4a57-a555-4d9ae924ddeb",
					"rawModeData": "{\r\n    \"username\": \"user\",\r\n    \"token\": 80\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
			"uid": "0-d5fa2907-629c-4ac9-a4af-a5a1daf21395",
			"name": "2) Create model",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"f0cbcc34-79d1-48db-b31f-c98672043488",
				"04233860-69d1-4f28-be63-07aef53f47c7",
				"a56b0734-524b-4e6c-be94-5d3ac1a8f4e6",
				"6838fd52-8992-4436-9967-bd1fae3bcd0d",
				"d2b391ea-b6d7-4a07-98d5-b4ce0a0f76da",
				"79ce5e5d-5395-4f8f-96c6-1ff5bf3fa335",
				"68ae7430-b314-4b4a-8838-2d853a19c04a",
				"f2be7653-6ccc-498e-ac17-9a7522457dd7",
				"c9300b3b-85bf-4061-ac49-50ede4e27fd0"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:40.386Z",
			"folders": [],
			"requests": [
				{
					"id": "04233860-69d1-4f28-be63-07aef53f47c7",
					"uid": "0-04233860-69d1-4f28-be63-07aef53f47c7",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "bad61d1d-dbe7-449a-8e53-a0ba2a47c8e3",
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "6838fd52-8992-4436-9967-bd1fae3bcd0d",
					"uid": "0-6838fd52-8992-4436-9967-bd1fae3bcd0d",
					"name": "No modelName",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0de7f3bf-53fe-47d8-83e9-2f318f24083b",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"datasetName\": \"modello numero 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "68ae7430-b314-4b4a-8838-2d853a19c04a",
					"uid": "0-68ae7430-b314-4b4a-8838-2d853a19c04a",
					"name": "Dataset name too long",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "cdf684dc-c670-4172-9688-890656054836",
								"exec": [
									"pm.test(\"No dataset found with this name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No dataset found with this name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset numero 1 con nome troppo lungo errore sollevato\",\r\n    \"modelName\": \"modello 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "79ce5e5d-5395-4f8f-96c6-1ff5bf3fa335",
					"uid": "0-79ce5e5d-5395-4f8f-96c6-1ff5bf3fa335",
					"name": "Model name too long",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "24a745ca-3f7e-4d4d-b619-9e1027e67d46",
								"exec": [
									"pm.test(\"No dataset found with this name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No dataset found with this name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset sbagliato\",\r\n    \"modelName\": \"modello numero 1 con nome troppo lungo errore sollevato\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "a56b0734-524b-4e6c-be94-5d3ac1a8f4e6",
					"uid": "0-a56b0734-524b-4e6c-be94-5d3ac1a8f4e6",
					"name": "No dataset",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9a2fd357-7f35-4060-8422-766fc95b5ffd",
								"exec": [
									"pm.test(\"No model_name\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No model_name\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"modelName\": \"modello numero 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c9300b3b-85bf-4061-ac49-50ede4e27fd0",
					"uid": "0-c9300b3b-85bf-4061-ac49-50ede4e27fd0",
					"name": "Create model success",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "4e935f99-72a8-41bc-9c0c-19f6a95d2f8a",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.model.id).to.eql(4);\r",
									"  pm.expect(jsonData.model.name).to.eql(\"nuovo modello\");\r",
									"  pm.expect(jsonData.model.dataset).to.eql(1);\r",
									"  pm.expect(jsonData.model.user).to.eql(\"user\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(201);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.model.id).to.eql(4);\r\n  pm.expect(jsonData.model.name).to.eql(\"nuovo modello\");\r\n  pm.expect(jsonData.model.dataset).to.eql(1);\r\n  pm.expect(jsonData.model.user).to.eql(\"user\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"modelName\": \"nuovo modello\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "d2b391ea-b6d7-4a07-98d5-b4ce0a0f76da",
					"uid": "0-d2b391ea-b6d7-4a07-98d5-b4ce0a0f76da",
					"name": "No dataset with this name",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "de2b5662-eddd-4a00-868e-319591f6d09d",
								"exec": [
									"pm.test(\"No dataset found with this name\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No dataset found with this name\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"datasetName\": \"dataset sbagliato\",\r\n    \"modelName\": \"modello numero 1\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "f0cbcc34-79d1-48db-b31f-c98672043488",
					"uid": "0-f0cbcc34-79d1-48db-b31f-c98672043488",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "notWorks",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "012bb4d5-95b3-4b02-ae37-4a14eed1b1e4",
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "notWorks"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "f2be7653-6ccc-498e-ac17-9a7522457dd7",
					"uid": "0-f2be7653-6ccc-498e-ac17-9a7522457dd7",
					"name": "Model already exists",
					"url": "localhost:8080/model/create",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "537071ed-938d-48e2-b35a-3ca3f76d7983",
								"exec": [
									"pm.test(\"No email\", function () {\r",
									"  pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You can't have two models with the same name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No email\", function () {\r\n  pm.response.to.have.status(409);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You can't have two models with the same name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d5fa2907-629c-4ac9-a4af-a5a1daf21395",
					"rawModeData": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"modelName\": \"my_eye_models_0\"\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
			"uid": "0-d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
			"name": "3) Update dataset metadata",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"0971c840-102f-45b0-aa76-6af0892ac2df",
				"ef644ecf-a288-4009-9c21-e49f69da9837",
				"8e360d98-f435-41b3-a795-74abff471acc",
				"066128b5-6dee-4a3e-b2a7-87de2d91d8eb",
				"c0123b11-dec7-4f80-895b-4228f47d8848",
				"0b41c80f-e923-4626-a852-abedbf640e7b",
				"9a881857-fbc1-4de4-8d82-cc02dbdd2bf7",
				"db02b0d0-8e47-4b5f-aac8-9e5a2ce023cf",
				"621d7887-8147-45d5-8830-ccacb1e6c34d",
				"a1c0a914-f331-41b8-b879-746bf86249bf",
				"1a56c24f-7127-41d6-b0d5-74cece3785d5",
				"8eda36bd-b841-462b-883d-fa2da8a89aea"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T20:18:17.064Z",
			"folders": [],
			"requests": [
				{
					"id": "066128b5-6dee-4a3e-b2a7-87de2d91d8eb",
					"uid": "0-066128b5-6dee-4a3e-b2a7-87de2d91d8eb",
					"name": "NewDatasetName too long",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'newDatasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "03a9ca2d-a374-4ecf-aead-3adced35fbd6"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'newDatasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"star\",\r\n    \"newDatasetName\": \"star warsssssssssssssssssssssss\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "0971c840-102f-45b0-aa76-6af0892ac2df",
					"uid": "0-0971c840-102f-45b0-aa76-6af0892ac2df",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "f95f8968-ed96-4e8b-bfaf-9773e5999711"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\n    \"datasetName\": \"star wars\",\n    \"newDatasetName\": \"star wars nuovo\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "0b41c80f-e923-4626-a852-abedbf640e7b",
					"uid": "0-0b41c80f-e923-4626-a852-abedbf640e7b",
					"name": "No datasetName input",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No input metadata\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");",
									"});"
								],
								"type": "text/javascript",
								"id": "907cb621-42ef-470e-b2ee-83b0f05c5bf9"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No input metadata\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\n    \"newDatasetName\": \"star wars nuovo\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "1a56c24f-7127-41d6-b0d5-74cece3785d5",
					"uid": "0-1a56c24f-7127-41d6-b0d5-74cece3785d5",
					"name": "Update datasetName and classes success",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "1da9e029-e768-4390-9795-9509e7a65acb",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"nuovo nome del dataset\",\r\n    \"newDatasetName\": \"uccelli selvatici\",\r\n    \"classes\": 111,\r\n    \"keywords\": [\"canarino\"]\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "621d7887-8147-45d5-8830-ccacb1e6c34d",
					"uid": "0-621d7887-8147-45d5-8830-ccacb1e6c34d",
					"name": "Keyword too long",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"You have to specify the 'keywords' array (max 30 char for element, no duplicates allowed)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ca410f75-3d95-4e9a-93cb-c9a46e6b353a"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"You have to specify the 'keywords' array (max 30 char for element, no duplicates allowed)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"nuovo nome del dataset2\",\r\n    \"newDatasetName\": \"nuovo nome del dataset3\",\r\n    \"classes\": 111,\r\n    \"keywords\": [\"ciaoaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"]\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8e360d98-f435-41b3-a795-74abff471acc",
					"uid": "0-8e360d98-f435-41b3-a795-74abff471acc",
					"name": "DatasetName too long",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d5b2f237-26e3-4acb-9587-1bf636350710"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"star warsssssssssssssssssssssss\",\r\n    \"newDatasetName\": \"star wars nuovo\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8eda36bd-b841-462b-883d-fa2da8a89aea",
					"uid": "0-8eda36bd-b841-462b-883d-fa2da8a89aea",
					"name": "Update all success",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9881ab72-6c20-4699-b2bd-da9030068785",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"uccelli selvatici\",\r\n    \"newDatasetName\": \"pappagalli parlanti\",\r\n    \"classes\": 111\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "9a881857-fbc1-4de4-8d82-cc02dbdd2bf7",
					"uid": "0-9a881857-fbc1-4de4-8d82-cc02dbdd2bf7",
					"name": "Classes too big",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"'classes' need to be a number (max 120)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "cae65a23-7872-4705-96e4-842b66883a54"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"'classes' need to be a number (max 120)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"newDatasetName\": \"nuovo nome del dataset\",\r\n    \"classes\": 124\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "a1c0a914-f331-41b8-b879-746bf86249bf",
					"uid": "0-a1c0a914-f331-41b8-b879-746bf86249bf",
					"name": "Update datasetName success",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9155f349-fbd7-4f22-b66e-c316f3e4ca95"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"newDatasetName\": \"nuovo nome del dataset\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c0123b11-dec7-4f80-895b-4228f47d8848",
					"uid": "0-c0123b11-dec7-4f80-895b-4228f47d8848",
					"name": "Dataset not found",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "f0348432-63c5-4531-a41e-0a77e8d991fe"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"datase name\",\r\n    \"newDatasetName\": \"dataset name nuovo\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "db02b0d0-8e47-4b5f-aac8-9e5a2ce023cf",
					"uid": "0-db02b0d0-8e47-4b5f-aac8-9e5a2ce023cf",
					"name": "Already exists a dataset with this name",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Dataset already exists\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8fb9be83-3679-4714-8de3-3351839eb5b6"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(409);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Dataset already exists\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\r\n    \"datasetName\": \"occhio_dx\",\r\n    \"newDatasetName\": \"occhio_dx\",\r\n    \"classes\": 11\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ef644ecf-a288-4009-9c21-e49f69da9837",
					"uid": "0-ef644ecf-a288-4009-9c21-e49f69da9837",
					"name": "No tokenJWT",
					"url": "localhost:8080/dataset/update",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "77922ee8-4f3e-4f24-a7f7-253d8b8d081c"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "d8d10ce9-db73-4d56-b927-e0aaa87c8f5e",
					"rawModeData": "{\n    \"datasetName\": \"star wars\",\n    \"newDatasetName\": \"star wars nuovo\"\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
			"uid": "0-e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
			"name": "2) Update model metadata",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"f9e50a26-25b4-4b56-82fd-578b13675719",
				"eafae86a-c6dd-4cf4-acab-583f2e23c534",
				"8148c200-e053-4d21-8923-9d5d94f9639d",
				"56398ac8-0e07-4505-857f-a140f589d0f8",
				"f2467082-c453-4a88-89fe-dba80be4f9dc",
				"0d0fd82f-8a91-438e-afbe-fface265185b",
				"332fca2a-cf90-4316-bfb6-c112b9b06e23",
				"a40aa2af-b58e-4cab-82c8-9609340b562d",
				"fae98616-b545-4347-8956-e5973a463adf"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:41.530Z",
			"folders": [],
			"requests": [
				{
					"id": "0d0fd82f-8a91-438e-afbe-fface265185b",
					"uid": "0-0d0fd82f-8a91-438e-afbe-fface265185b",
					"name": "No input metadata",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-admin}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No input metadata\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"No input metadata\");",
									"});"
								],
								"type": "text/javascript",
								"id": "2742b442-26bb-4ec3-97c3-f57de9d9f957"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"No input metadata\", function () {\n  pm.response.to.have.status(400);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"No input metadata\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-admin}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\n    \"modelName\": \"star wars_27\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "332fca2a-cf90-4316-bfb6-c112b9b06e23",
					"uid": "0-332fca2a-cf90-4316-bfb6-c112b9b06e23",
					"name": "Update datasetName success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5c8074e8-69db-4107-b892-c59e237319dd",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\r\n    \"modelName\": \"my_eye_models_1\",\r\n    \"datasetName\": \"occhio_dx\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "56398ac8-0e07-4505-857f-a140f589d0f8",
					"uid": "0-56398ac8-0e07-4505-857f-a140f589d0f8",
					"name": "Model not found",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Model not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "dc6e6096-eee9-44d3-bf2a-ae930bbf3701"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Model not found\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\r\n    \"modelName\": \"modello non esistente\",\r\n    \"newModelName\": \"star wars nuovo3\"\r\n\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8148c200-e053-4d21-8923-9d5d94f9639d",
					"uid": "0-8148c200-e053-4d21-8923-9d5d94f9639d",
					"name": "No model input",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "caf889a4-fefb-4fef-b24f-b348fdccfb59"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(400);\r\n});\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "a40aa2af-b58e-4cab-82c8-9609340b562d",
					"uid": "0-a40aa2af-b58e-4cab-82c8-9609340b562d",
					"name": "Update modelName success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "94ae772c-87fb-4451-b172-15920534e7df",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\r\n    \"modelName\": \"my_eye_models_0\",\r\n    \"newModelName\": \"my_eye_models_3\"\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "eafae86a-c6dd-4cf4-acab-583f2e23c534",
					"uid": "0-eafae86a-c6dd-4cf4-acab-583f2e23c534",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "a4e114bb-bb3e-4796-b333-e8ca1218c0ea"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": ""
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\n    \"modelName\": \"star wars\",\n    \"newModelName\": \"star wars nuovo\",\n    \"datasetName\": \"occhi_ritagliati\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "f2467082-c453-4a88-89fe-dba80be4f9dc",
					"uid": "0-f2467082-c453-4a88-89fe-dba80be4f9dc",
					"name": "Dataset not found",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "00ce3ea4-edfc-4b90-a546-5b1b6f2e9357",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(404);\r\n});\r\n\r\n\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\r\n    \"modelName\": \"my_eye_models_1\",\r\n    \"datasetName\": \"dataset non esistente\"\r\n\r\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "f9e50a26-25b4-4b56-82fd-578b13675719",
					"uid": "0-f9e50a26-25b4-4b56-82fd-578b13675719",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "cccc",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unauthorized\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Confirm response message\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"id": "c840b45c-aa8d-429c-8ff5-537b973064d2"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Unauthorized\", function () {\n  pm.response.to.have.status(401);\n});\n\npm.test(\"Confirm response message\", function () {\n  var jsonData = pm.response.json();\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "cccc"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\n    \"modelName\": \"star wars\",\n    \"newModelName\": \"star wars nuovo\",\n    \"datasetName\": \"occhi_ritagliati\"\n}",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "fae98616-b545-4347-8956-e5973a463adf",
					"uid": "0-fae98616-b545-4347-8956-e5973a463adf",
					"name": "Update all success",
					"url": "localhost:8080/model/updateMetadata",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9dd42132-28f3-4c10-9377-c42ba3c5a79e",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Value correctly modified\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e012a9f3-9c00-4dcf-b684-2b3a76d50caa",
					"rawModeData": "{\r\n    \"modelName\": \"my_eye_models_3\",\r\n    \"newModelName\": \"my_eye_models_4\",\r\n    \"datasetName\": \"occhio_dx\"\r\n}",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "e9be6208-86c6-4771-bd77-68368181e883",
			"uid": "0-e9be6208-86c6-4771-bd77-68368181e883",
			"name": "2) List models",
			"description": null,
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"5c736868-e64f-4c1e-880f-3173aea52c1e",
				"b4223098-821f-4dc9-90ef-e903af4fad3d",
				"464a064a-bbee-4ce4-8f7a-d37f95c222cd"
			],
			"folders_order": [],
			"protocolProfileBehavior": {},
			"createdAt": "2022-07-18T19:18:41.134Z",
			"folders": [],
			"requests": [
				{
					"id": "464a064a-bbee-4ce4-8f7a-d37f95c222cd",
					"uid": "0-464a064a-bbee-4ce4-8f7a-d37f95c222cd",
					"name": "List model success",
					"url": "localhost:8080/model/list",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token-user}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5d932066-150f-44df-a609-149d448e62e4",
								"exec": [
									"pm.test(\"Success\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.modelList).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"Success\", function () {\r\n  pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.modelList).to.be.an(\"array\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "{{token-user}}"
					},
					"collectionId": "e9be6208-86c6-4771-bd77-68368181e883",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "5c736868-e64f-4c1e-880f-3173aea52c1e",
					"uid": "0-5c736868-e64f-4c1e-880f-3173aea52c1e",
					"name": "Malformed tokenJWT",
					"url": "localhost:8080/model/list",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "ciaociao",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Malformed tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "092db788-aca2-4c92-949a-ab7abb1406b9"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"Malformed tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "ciaociao"
					},
					"collectionId": "e9be6208-86c6-4771-bd77-68368181e883",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b4223098-821f-4dc9-90ef-e903af4fad3d",
					"uid": "0-b4223098-821f-4dc9-90ef-e903af4fad3d",
					"name": "No tokenJWT",
					"url": "localhost:8080/model/list",
					"description": null,
					"data": [],
					"dataOptions": {
						"raw": {
							"language": "json"
						}
					},
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No tokenJWT\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Confirm response message\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "bc2822d2-2fd1-4c19-895c-c0d91268c94b"
							}
						}
					],
					"folder": null,
					"responses_order": [],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"preRequestScript": null,
					"tests": "pm.test(\"No tokenJWT\", function () {\r\n  pm.response.to.have.status(401);\r\n});\r\n\r\npm.test(\"Confirm response message\", function () {\r\n  var jsonData = pm.response.json();\r\n  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "e9be6208-86c6-4771-bd77-68368181e883",
					"rawModeData": "[]",
					"headers": "",
					"pathVariables": {}
				}
			]
		}
	],
	"environments": [
		{
			"id": "0a7d3675-a753-41e9-a85a-f467f846e39d",
			"name": "dataset-manager",
			"values": [
				{
					"key": "token-admin",
					"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6ImFkbWluIiwicGFzc3dvcmQiOiJwYXNzd29yZDEiLCJlbWFpbCI6ImFkbWluQGFkbWluLml0IiwiaWF0IjoxNjU3ODA3NTE2LCJleHAiOjE2NTk1MzU1MTZ9.lgKRTqv5c5PMKSu1f8CWnrPZNAB6Hug2-3FkutfeGro",
					"type": "default",
					"enabled": true
				},
				{
					"key": "token-user",
					"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIiLCJyb2xlIjoidXNlciIsInBhc3N3b3JkIjoicGFzc3dvcmQyIiwiZW1haWwiOiJ1c2VyczFAdXNlcnMxLml0IiwiaWF0IjoxNjU3ODA3Njg2LCJleHAiOjE2NTk1MzU2ODZ9.w8wIWGXxmM58sqnv6bX_UCIgFwj8vI6QkOEI84gsvXk",
					"type": "default",
					"enabled": true
				}
			]
		},
		{
			"id": "0c6243da-c420-4b6a-81b3-5c7b775eb4b8",
			"name": "My Workspace - globals",
			"values": []
		},
		{
			"id": "2c92b0b7-0167-42fc-82e4-3195e40b6df4",
			"name": "My Workspace - globals",
			"values": []
		}
	],
	"headerPresets": [],
	"globals": []
}