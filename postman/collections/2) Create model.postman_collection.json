{
	"info": {
		"_postman_id": "45fb50e4-cc01-428f-a83c-30c4ee061e74",
		"name": "2) Create model",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Malformed tokenJWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Malformed tokenJWT\", function () {\r",
							"  pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "notWorks",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "No tokenJWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No tokenJWT\", function () {\r",
							"  pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "No dataset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No model_name\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"modelName\": \"modello numero 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "No modelName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No model_name\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"datasetName\": \"modello numero 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "No dataset with this name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No dataset found with this name\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"No dataset found with this name\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"datasetName\": \"dataset sbagliato\",\r\n    \"modelName\": \"modello numero 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Model name too long",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No dataset found with this name\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'modelName' (max 30 char)\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"datasetName\": \"dataset sbagliato\",\r\n    \"modelName\": \"modello numero 1 con nome troppo lungo errore sollevato\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset name too long",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No dataset found with this name\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'datasetName' (max 30 char)\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"datasetName\": \"dataset numero 1 con nome troppo lungo errore sollevato\",\r\n    \"modelName\": \"modello 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Model already exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No email\", function () {\r",
							"  pm.response.to.have.status(409);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"You can't have two models with the same name\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"modelName\": \"my_eye_models_0\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create model success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.model.id).to.eql(4);\r",
							"  pm.expect(jsonData.model.name).to.eql(\"nuovo modello\");\r",
							"  pm.expect(jsonData.model.dataset).to.eql(1);\r",
							"  pm.expect(jsonData.model.user).to.eql(\"user\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"datasetName\": \"occhi_ritagliati\",\r\n    \"modelName\": \"nuovo modello\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"create"
					]
				}
			},
			"response": []
		}
	]
}