{
	"info": {
		"_postman_id": "7a8d7529-5b64-4a43-b2c1-f25bf6e94d9d",
		"name": "2) Update model file",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Malformed tokenJWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unauthorized\", function () {",
							"  pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "cccc",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelName\": \"new_model\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/file",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "No tokenJWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unauthorized\", function () {",
							"  pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelName\": \"new_model\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/file",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Wrong input body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Unauthorized\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Your request body need to be a Form\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-admin}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelName\": \"new_model\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/file",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "No model found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No model found\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Model not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "fileName",
							"type": "file",
							"src": "works.py"
						},
						{
							"key": "modelName",
							"value": "modello non esistente",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/file",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"file"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update model success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No model found\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "fileName",
							"type": "file",
							"src": "/Users/alessandro/Desktop/vscode/dataset-manager/postman/file/works.py"
						},
						{
							"key": "modelName",
							"value": "my_eye_models_1",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/model/file",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"model",
						"file"
					]
				}
			},
			"response": []
		}
	]
}