{
	"info": {
		"_postman_id": "a9f91bb1-2d98-490c-89ab-0b9e939353fd",
		"name": "3) Insert label list",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "No tokenJWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No tokenJWT\", function () {\r",
							"  pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Malformed tokenJWT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Malformed tokenJWT\", function () {\r",
							"  pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "ciaociao",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "No array",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify an array \");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "No className",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'className' (max 30 char)\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"height\": 0.1,\r\n        \"center\": 0.1,\r\n        \"width\": 0.3,\r\n        \"imagePath\": \"ciaociao\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "No malformed BoundingBoxes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"className\": \"classe\",\r\n        \"height\": 0.1,\r\n        \"center\": 0.1,\r\n        \"imagePath\": \"ciaociao\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Not normalized BoundingBoxes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"If you want to insert BoundingBoxes you need to specify normalized height, width and center\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"className\": \"gatto\",\r\n    \"height\": 0.1,\r\n    \"center\": 2,\r\n    \"width\": 0.3,\r\n    \"imagePath\": \"ciaociao\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "No imagePath",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.eql(\"Need to specify a valid 'imagePath'\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"className\": \"gatto\",\r\n        \"height\": 0.1,\r\n        \"center\": 0.1,\r\n        \"width\": 0.3\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "className already exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"className\": \"classe 5\",\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "No image found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {    \r\n        \"className\": \"gatto\",\r\n            \"height\": 0.1,\r\n            \"center\": 0.1,\r\n            \"width\": 0.3,\r\n            \"imagePath\": \"path1\"\r\n        },\r\n        {\r\n            \"className\": \"cane\",\r\n            \"height\": 0.4,\r\n            \"center\": 0.3,\r\n            \"width\": 0.2,\r\n            \"imagePath\": \"path2\"\r\n        }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert Label list success (the last is duplicated)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Confirm response message\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token-user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"className\": \"classe 4\",\r\n        \"height\": 0.1,\r\n        \"center\": 0.4,\r\n        \"width\": 0.3,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    },\r\n    {\r\n        \"className\": \"classe 1\",\r\n        \"height\": 0.2,\r\n        \"center\": 0.4,\r\n        \"width\": 0.9,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    },\r\n    {\r\n        \"className\": \"classe 7\",\r\n        \"height\": 0.3,\r\n        \"center\": 0.4,\r\n        \"width\": 0.2,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    },\r\n    {\r\n        \"className\": \"classe 7\",\r\n        \"height\": 0.3,\r\n        \"center\": 0.4,\r\n        \"width\": 0.2,\r\n        \"imagePath\": \"/datasets/1/user/img_1.png\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/dataset/labelList",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dataset",
						"labelList"
					]
				}
			},
			"response": []
		}
	]
}